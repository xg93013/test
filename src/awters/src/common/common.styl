// 全局变量
// header高度
$headerH=80px;
$minHeight=1080px;

if (100vh > $minHeight) {
    $min-height=100vh;
}
// 声明minxin
base(w=initial,h=initial,lh=initial)
    width:w;
    height:h;
    line-height:lh;
clf()
    &:after
        display block
        clear both
        content ""
// 给自定义属性加计算属性值
calcM(attr, per, px){
    {attr} 'calc(%s - %s)' % (per px)
    {attr} '-moz-calc(%s - %s)' % (per px)
    {attr} '-webkit-calc(%s - %s)' (per px)
}
calcP(attr, per, px){
    {attr} 'calc(%s + %s)' % (per px)
    {attr} '-moz-calc(%s + %s)' % (per px)
    {attr} '-webkit-calc(%s + %s)' (per px)
}

calcDivision(attr, per, px, divn) {
    {attr} 'calc((%s - %s) / %s )' % (per px divn)
    {attr} '-moz-calc((%s - %s) / %s )' % (per px divn)
    {attr} '-webkit-calc((%s - %s) / %s )' (per px divn)
}
// 动画效果
trans($a=all,$t=.25s,$s=ease-in-out) {
    -webkit-transition: $a $t $s;
    transition: $a $t $s;
    -moz-transition: $a $t $s; /* Firefox 4 */
    -o-transition: $a $t $s; /* Opera */
}

// 渐变色设置
gradientStyle($d,$c1,$c2) {
    background: linear-gradient(to $d,$c1,$c2);
    // background: -webkit-gradient(linear,$d,$c1,$c2);
    background: -o-linear-gradient($d,$c1,$c2);
    background: -moz-linear-gradient($d,$c1,$c2);
    background: -mos-linear-gradient($d,$c1,$c2);
    background: -ms-linear-gradient($d,$c1,$c2);
}
// calc(attr, expression){
//     {attr} cal({expression})
//     {attr} -moz-calc({expression})
//     {attr} -webkit-calc({expression})
// }
    // attr -moz-{expression}
    // attr -webkit-{expression}